---
- name: Check if kube config exists
  stat:
    path: /etc/kubernetes/admin.conf
  register: kube_config

- name: Initialise Kubernetes cluster
  shell: kubeadm init --apiserver-advertise-address=192.168.60.100 --node-name=k8s-master --pod-network-cidr=192.168.0.0/16
  # This is a bit dirty, but better than nothing.
  when: kube_config.stat.exists == False

- name: Create .kube directory
  file:
    path: /home/vagrant/.kube/
    owner: vagrant
    group: vagrant
    mode: '0755'
    state: directory

- name: Copy admin config to .kube
  copy:
    remote_src: true
    src: /etc/kubernetes/admin.conf
    dest: /home/vagrant/.kube/config
    owner: vagrant
    group: vagrant
    mode: '0644'

- name: Install metrics server
  become: false
  command: kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml

- name: Set kubelet-insecure-tls for metrics server
  become: false
  command: |
    kubectl patch deployment metrics-server -n kube-system --type='json' -p='[{"op": "add", "path": "/spec/template/spec/containers/0/args/-", "value": "--kubelet-insecure-tls"}]'

- name: Enable host network for metrics server
  become: false
  command: |
    kubectl patch deployment metrics-server -n kube-system --type='json' -p='[{"op": "add", "path": "/spec/template/spec/hostNetwork", "value": true}]'

- name: Install Cilium CLI
  become: false
  shell: |
    CILIUM_CLI_VERSION=$(curl -s https://raw.githubusercontent.com/cilium/cilium-cli/main/stable.txt)
    GOOS=linux
    GOARCH=amd64
    curl -L --remote-name-all https://github.com/cilium/cilium-cli/releases/download/${CILIUM_CLI_VERSION}/cilium-${GOOS}-${GOARCH}.tar.gz{,.sha256sum}
    sha256sum --check cilium-${GOOS}-${GOARCH}.tar.gz.sha256sum
    sudo tar -C /usr/local/bin -xzvf cilium-${GOOS}-${GOARCH}.tar.gz
    rm cilium-${GOOS}-${GOARCH}.tar.gz{,.sha256sum}

- name: Install Cilium
  become: false
  command: cilium install

- name: Generate join command
  shell: kubeadm token create --print-join-command
  register: join_command

- name: Store join command to local machine
  local_action: copy content={{ join_command.stdout }} dest=./join-command.sh